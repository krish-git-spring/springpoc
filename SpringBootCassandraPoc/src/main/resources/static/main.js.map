{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/components/cart/cart.component.html","webpack:///./src/app/components/cart/cart.component.scss","webpack:///./src/app/components/cart/cart.component.ts","webpack:///./src/app/components/navigation/navigation.component.html","webpack:///./src/app/components/navigation/navigation.component.scss","webpack:///./src/app/components/navigation/navigation.component.ts","webpack:///./src/app/config/api-config.ts","webpack:///./src/app/services/api-interceptor.service.ts","webpack:///./src/app/services/config.service.ts","webpack:///./src/app/services/products.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./components/products/products.module\": [\n\t\t\"./src/app/components/products/products.module.ts\",\n\t\t\"components-products-products-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","module.exports = \"<router-outlet></router-outlet>\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'kroger-six';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppRoutingModule } from './app.routing';\n\nimport { AppComponent } from './app.component';\nimport { NavigationComponent } from './components/navigation/navigation.component';\n\nimport { ConfigService } from './services/config.service';\nimport { ApiInterceptorService } from './services/api-interceptor.service';\nimport { ProductsService } from './services/products.service';\nimport { CartComponent } from './components/cart/cart.component';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavigationComponent,\n    CartComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    NgbModule.forRoot(),\n    AppRoutingModule,\n    BrowserAnimationsModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: ApiInterceptorService, multi: true },\n    ConfigService,\n    ProductsService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NavigationComponent } from './components/navigation/navigation.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NavigationComponent\n  },\n  {\n    path: 'products',\n    loadChildren: './components/products/products.module#ProductsModule'\n  }\n];\n\n@NgModule({\n  // imports: [RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })],\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<p>\\n  cart works!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.scss']\n})\nexport class CartComponent implements OnInit {\n  /**\n   * CartComponent constructor\n   */\n  constructor() { }\n\n  /**\n   * on init life cycle hook\n   */\n  ngOnInit() {\n  }\n}\n","module.exports = \"\\n<div class=\\\"container\\\">\\n  <nav class=\\\"navbar navbar-light\\\" style=\\\"background-color: #e3f2fd;\\\">\\n    <a class=\\\"navbar-brand\\\" routerLink=\\\"/products\\\">Products</a>\\n    <a class=\\\"navbar-brand\\\" routerLink=\\\"/cart\\\">Cart</a>\\n  </nav>\\n</div>\\n\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss']\n})\nexport class NavigationComponent implements OnInit {\n  /**\n   * NavigationComponent constructor\n   */\n  constructor() { }\n\n  /**\n   * On init life cycle hook\n   */\n  ngOnInit() {\n  }\n}\n","export const apiUrls = {\n  products: 'customers',\n  customers: 'saveCustomer',\n  updateProfile: 'updateCustomerById',\n  deleteProfile: 'deleteCustomerById'\n};\n","import { Injectable } from '@angular/core';\nimport {\n  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable()\nexport class ApiInterceptorService implements HttpInterceptor {\n  /**\n   * ApiInterceptorService constructor\n   */\n  constructor() { }\n\n  /**\n   * Intercept - method that will be called before each XHR / $http call\n   * @param {HttpRequest} req\n   * @param {HttpHandler} next\n   * @return {Observable}\n   */\n  intercept(req: HttpRequest<object>, next: HttpHandler): Observable<HttpEvent<object>> {\n    console.log('Intercepted req');\n    console.log(req);\n    return next.handle(req)\n        .pipe(\n            tap(\n                (event) => {\n                  console.log('Response....');\n                  console.log(event);\n                }\n            )\n        );\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { environment } from '../../environments/environment';\nimport { apiUrls } from '../config/api-config';\n\n@Injectable()\nexport class ConfigService {\n  /**\n   * ConfigService constructor\n   */\n  constructor() { }\n\n  /**\n   * Form api url with baseurl and resource\n   * @param {string} key\n   * @return {string}\n   */\n  getApiUrl(key) {\n    return environment.baseurl + apiUrls[key];\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\n\nimport { ConfigService } from './config.service';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\n\n@Injectable()\nexport class ProductsService {\n  /**\n   * ProductsService constructor\n   * @param {HttpClient} http\n   * @param {ConfigService} configService\n   */\n  constructor(\n    private http: HttpClient,\n    private configService: ConfigService\n  ) { }\n\n  /**\n   * Fetch products\n   * @return {Observable}\n   */\n  getProducts() {\n    const productsUrl = this.configService.getApiUrl('products');\n    return (this.http.get(productsUrl)).pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Save profile\n   * @param {object} profile\n   * @return {Observable} http observable\n   */\n  updateProfile(profile) {\n    let customersUrl = this.configService.getApiUrl('updateProfile');\n\n    customersUrl += '/'+profile.id;\n    return this.http.put(customersUrl, profile).pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Add profile\n   * @param {object} profile\n   * @return {Observable} http observable\n   */\n  addProfile(profile) {\n    const customersUrl = this.configService.getApiUrl('customers');\n    return this.http.post(customersUrl, profile).pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Delete profile\n   * @param {object} profile\n   * @return {Observable} http observable\n   */\n  deleteProfile(profile) {\n    let customersUrl = this.configService.getApiUrl('deleteProfile');\n\n    customersUrl += '/'+profile.id;\n    return this.http.delete(customersUrl, profile).pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Handle error\n   * @param {HttpErrorResponse} error\n   * @return {object}\n   */\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n          `Backend returned code ${error.status}, ` +\n          `body was: ${error.error}`\n      );\n    }\n    // return an observable with a user-facing error message\n    return throwError(error);\n  };\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseurl: 'http://localhost:8086/cassandra/'\n};\n\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n    .catch((err) => console.error(err));\n"],"sourceRoot":""}